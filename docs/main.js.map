{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/pet/pet.component.ts","./src/app/components/pet/pet.component.html","./src/app/services/pet.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app003Vet';\n}\n","<h1>Vet Management System</h1>\n<app-pet></app-pet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { PetComponent } from './components/pet/pet.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PetComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\t\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\r\nimport { Pet } from '../../models/pet.model';\r\nimport { PetService } from '../../services/pet.service'\r\n\r\n\r\n@Component({\r\n  selector: 'app-pet',\r\n  templateUrl: './pet.component.html',\r\n  styleUrls: ['./pet.component.css']\r\n})\r\nexport class PetComponent {\r\n  pets: Pet[] = [];\r\n  newOrUpdatedPet: Pet = { id: 0, name: '', breed: '', age: 0, weight: 0, photoUrl: '' };\r\n  editIndex: number | null = null;  \r\n\r\n\r\n   constructor(private petService: PetService) {}\r\n\r\n  ngOnInit() {\r\n    this.getPets();\r\n  }\r\n\r\n  getPets(): void {\r\n    this.pets = this.petService.getAll();\r\n  }\r\n\r\n  // Add or Update a pet\r\n  addPet() {\r\n    if (this.editIndex === null) {\r\n      //add\r\n      const addedPet = this.petService.add(this.newOrUpdatedPet);\r\n      this.pets.push({ ...addedPet }); //create copy\r\n    } else {\r\n      //update\r\n      const updatedPet :Boolean = this.petService.update(this.newOrUpdatedPet);\r\n      if (updatedPet)\r\n        this.pets[this.editIndex] = { ...this.newOrUpdatedPet };//copy !\r\n      this.editIndex = null;\r\n    }\r\n    this.resetForm();\r\n  }\r\n\r\n  // Edit pet (loads data into the form)\r\n  editPet(index: number) {\r\n    this.newOrUpdatedPet = { ...this.pets[index] }; //copy\r\n    this.editIndex = index;\r\n  }\r\n\r\n  // Delete pet\r\n  deletePet(index: number) {\r\n    const deletedPet :Boolean = this.petService.delete(this.pets[index].id);\r\n    if (deletedPet) {\r\n      this.pets.splice(index, 1);\r\n      if (this.editIndex === index) { //in case deleted pet is editted\r\n        this.resetForm();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Reset the form\r\n  resetForm() {\r\n    this.newOrUpdatedPet = { id: 0, name: '', breed: '', age: 0, weight: 0, photoUrl: '' };\r\n    this.editIndex = null;\r\n  }\r\n}\r\n\r\n\r\n//Note:\r\n  //constructor define a private service property\r\n  //di: When Angular creates the component, the Dependency Injection system sets the service parameter to the singleton instance.\r\n  //constructor(private petService: PetService) {}\r\n\r\n\r\n  \r\n //Note: calling getPet in the constructor, is not the best practice.\r\n //      constructor  should be used for simple initialization such as wiring constructor parameters to properties. The constructor shouldn't do anything. It certainly shouldn't call a function that makes HTTP requests to a remote server as a real data service would.\r\n//       Instead, call getPets() inside the ngOnInit lifecycle hook and let Angular call ngOnInit() at an appropriate time after constructing a HeroesComponent instance.\r\n//ngOnInit() \r\n\r\n\r\n","<div class=\"container\">\r\n  <!-- Pet List -->\r\n  <div class=\"pet-list\">\r\n    <div *ngFor=\"let pet of pets; let i = index\" class=\"pet-card\">\r\n      <img [src]=\"pet.photoUrl\" alt=\"{{ pet.name }}\" />\r\n      <h3>{{ pet.name }}</h3>\r\n      <p>Breed: {{ pet.breed }}</p>\r\n      <p>Age: {{ pet.age }} years</p>\r\n      <p>Weight: {{ pet.weight }} kg</p>\r\n      <button (click)=\"editPet(i)\">Edit</button>\r\n      <button (click)=\"deletePet(i)\">Delete</button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Pet Form -->\r\n  <form class=\"pet-form\" (ngSubmit)=\"addPet()\" #petForm=\"ngForm\">\r\n    <h2>{{ editIndex === null ? 'Add Pet' : 'Edit Pet' }}</h2>\r\n    \r\n    <input type=\"text\" placeholder=\"Pet Name\" [(ngModel)]=\"newOrUpdatedPet.name\" name=\"name\" required />\r\n    <input type=\"text\" placeholder=\"Breed\" [(ngModel)]=\"newOrUpdatedPet.breed\" name=\"breed\" required />\r\n    <input type=\"number\" placeholder=\"Age\" [(ngModel)]=\"newOrUpdatedPet.age\" name=\"age\" required />\r\n    <input type=\"number\" placeholder=\"Weight (kg)\" [(ngModel)]=\"newOrUpdatedPet.weight\" name=\"weight\" required />\r\n    <input type=\"text\" placeholder=\"Photo URL\" [(ngModel)]=\"newOrUpdatedPet.photoUrl\" name=\"photoUrl\" required />\r\n    \r\n    <button type=\"submit\">{{ editIndex === null ? 'Add Pet' : 'Update Pet' }}</button>\r\n    <button type=\"button\" *ngIf=\"editIndex !== null\" (click)=\"resetForm()\">Cancel Edit</button>\r\n  </form>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Pet } from '../models/pet.model';\r\nimport { ParseTemplateOptions } from '@angular/compiler';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PetService {\r\n  private pets: Pet[] = [\r\n    { id: 1, name: 'Buddy!!!', breed: 'Golden Retriever', age: 5, weight: 30, photoUrl: '' },\r\n    { id: 2, name: 'Luna!!!',  breed: 'Labrador', age: 3, weight: 25, photoUrl: '' }\r\n  ];\r\n  private nextNewIndex: number = 3;\r\n\r\n  constructor() {}\r\n\r\n  getAll(): Pet[] {\r\n    return [...this.pets];//retrun a copy to prevent direct modification\r\n  }\r\n\r\n  getById(id: number): Pet |undefined {\r\n    const pet :Pet|undefined = this.pets.find(p => p.id === id);\r\n    const result : Pet |undefined  = (pet === undefined) ?undefined :  {...pet };//return a copy to prevent direct modification\r\n    return result;\r\n  }\r\n\r\n  add(pet: Pet): Pet {\r\n    const newPet: Pet = { ...pet}; //save a copy to prevent direct modification\r\n    newPet.id = this.nextNewIndex++;\r\n    this.pets.push(newPet);\r\n    return { ...newPet }; //retrun a copy to prevent direct modification\r\n  }\r\n\r\n  update(pet: Pet): Boolean {\r\n    const index = this.pets.findIndex(p => p.id === pet.id);\r\n    if (index !== -1) {\r\n      this.pets[index] = {...pet };//save a copy to prevent direct modification\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }    \r\n  }\r\n\r\n  delete(id: number): boolean {\r\n    const index = this.pets.findIndex(p => p.id === id);\r\n    if (index !== -1) {\r\n      this.pets.splice(index, 1);\r\n      return true; \r\n    }\r\n    else{\r\n     return false;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n//Note\r\n\r\n//key features\r\n\r\n\r\n//0. ensure immutability by retruning copies when needed\r\n//    ithout it, as array updated here it is updated in the component\r\n\r\n//1. @Injectable,import { Injectable }\r\n//   This marks the class as one that participates in the dependency injection system.\r\n//   The @Injectable() decorator accepts a metadata object for the service, the same way the @Component() decorator did for your component classes.\r\n//import { Injectable } from '@angular/core';\r\n\r\n\r\n//. add: Assigns a unique, auto-incrementing id to each item.\r\n\r\n//3.getItemById(id: number): Retrieves a specific item by its id.\r\n\r\n//4.updateItem(id: number, newName: string): Updates an item’s name by id.\r\n\r\n//5. deleteItem(id: number): Removes an item by id.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}